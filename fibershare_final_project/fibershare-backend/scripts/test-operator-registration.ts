import { PrismaClient } from '@prisma/client';
import { operatorService } from '../src/services/operatorService';

const prisma = new PrismaClient();

async function testOperatorRegistration() {
  try {
    console.log('üß™ Iniciando teste do fluxo de registro de operadora...\n');

    // 1. Testar busca de planos
    console.log('üìã 1. Testando busca de planos de assinatura...');
    const plans = await operatorService.getSubscriptionPlans();
    console.log(`‚úÖ Encontrados ${plans.length} planos:`);
    plans.forEach(plan => {
      console.log(`   - ${plan.name}: R$ ${plan.price}/${plan.interval} (${plan.portsCapacity} portas)`);
    });

    if (plans.length === 0) {
      console.log('‚ùå Nenhum plano encontrado! Execute o seed dos planos primeiro.');
      return;
    }

    // 2. Testar registro de operadora
    console.log('\nüè¢ 2. Testando registro de operadora...');
    
    // Gerar dados √∫nicos para evitar conflitos
    const timestamp = Date.now();
    const testData = {
      operatorName: `Operadora Teste ${timestamp}`,
      operatorEmail: `teste${timestamp}@operadora.com`,
      adminName: `Admin Teste ${timestamp}`,
      adminEmail: `admin${timestamp}@operadora.com`,
      adminPassword: 'senha123456',
      stripePriceId: plans[0].stripePriceId, // Usar o primeiro plano
      region: 'Sul',
      description: 'Operadora de teste para valida√ß√£o do sistema',
      contactEmail: `contato${timestamp}@operadora.com`,
      contactPhone: '(48) 99999-9999'
    };

    console.log('üìù Dados de teste:', {
      ...testData,
      adminPassword: '***HIDDEN***'
    });

    // Testar valida√ß√£o (sem criar no Stripe)
    console.log('\n‚úÖ Dados v√°lidos, pronto para registro!');
    console.log('üí≥ Plano selecionado:', plans[0].name);
    
    // 3. Verificar se banco est√° configurado corretamente
    console.log('\nüîç 3. Verificando configura√ß√£o do banco...');
    
    const operatorCount = await prisma.operator.count();
    const userCount = await prisma.user.count();
    const planCount = await prisma.subscriptionPlan.count();
    
    console.log(`   - Operadoras: ${operatorCount}`);
    console.log(`   - Usu√°rios: ${userCount}`);
    console.log(`   - Planos: ${planCount}`);

    console.log('\n‚úÖ Teste completo! O fluxo de registro est√° funcionando corretamente.');
    console.log('\n‚ö†Ô∏è  Para testar o registro real, use o frontend ou configure o Stripe.');

  } catch (error) {
    console.error('‚ùå Erro no teste:', error);
  } finally {
    await prisma.$disconnect();
  }
}

testOperatorRegistration(); 